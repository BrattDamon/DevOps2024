# Define the Workflow Name
name: Dev Ops App CI/CD Pipeline

# Define triggers for the workflow
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows running this workflow from GitHub Actions tab
  workflow_dispatch:

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/Project/frontend
    steps:
      - uses: actions/checkout@v4
      - name: List contents of frontend directory
        run: ls -la ${{ github.workspace }}/Project/frontend  # Check if frontend directory exists
      - uses: actions/setup-node@v4
        with:
          node-version: 23
      - run: npm install
      - run: npm run test
      - run: npm run build

  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/Project/backend
    steps:
      - uses: actions/checkout@v4
      - name: List contents of the repository
        run: ls -la ${{ github.workspace }}
      - name: List contents of backend directory
        run: ls -la ${{ github.workspace }}/Project/backend  # Check if backend directory exists
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - run: pip install -r requirements.txt
      - run: python -m unittest -v test_app.py



  # Define a job for building and pushing Docker images
  docker:
    # Run this job only when 'frontend' & 'backend' stages are sucessfully completed
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # Checkout code
      - uses: actions/checkout@v4
      # Setup Docker
      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Build frontend Docker image and push to GitHub Container Registry (if on main branch)
      - name: Build and push Docker image (frontend)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          tags: ghcr.io/${{ github.actor }}/cycalc-frontend:${{ github.sha }},ghcr.io/${{ github.actor }}/cycalc-frontend:latest
          push: true
      # Build backend Docker image and push to GitHub Container Registry (if on main branch)
      - name: Build and push Docker image (backend)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          tags: ghcr.io/${{ github.actor }}/cycalc-backend:${{ github.sha }},ghcr.io/${{ github.actor }}/cycalc-backend:latest
          push: true

  # Define a deployment job
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Backend to Render
        if: github.ref == 'refs/heads/main'
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
        run: curl "$deploy_url"
      - name: Deploy Frontend to Render
        if: github.ref == 'refs/heads/main'
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_FRONTEND }}
        run: curl "$deploy_url"
